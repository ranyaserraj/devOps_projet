#!/bin/bash

echo "üöÄ Acc√®s √† Grafana - DevOps Project (Corrig√©)"
echo "============================================="
echo ""
echo "üìä Grafana Dashboard:"
echo "   URL: http://localhost:3000"
echo "   Username: admin"
echo "   Password: admin123"
echo ""
echo "üìà Prometheus:"
echo "   URL: http://localhost:9090"
echo ""
echo "üîç cAdvisor (m√©triques conteneurs):"
echo "   URL: http://localhost:8080"
echo ""
echo "üìã Conteneurs DevOps surveill√©s:"
echo "   - idurar-frontend (Port 3002)"
echo "   - idurar-backend (Port 5001)"
echo "   - idurar-mongodb (Port 27017)"
echo "   - idurar-portainer (Port 9000)"
echo ""
echo "üéØ Dashboards disponibles:"
echo "   1. 'DevOps Project - M√©triques Syst√®me' (Recommand√©)"
echo "   2. 'DevOps Project - Conteneurs Non-Optimis√©s (Live)'"
echo ""
echo "üí° Pour acc√©der aux m√©triques:"
echo "   1. Ouvrir Grafana: http://localhost:3000"
echo "   2. Se connecter avec admin/admin123"
echo "   3. Aller dans 'Dashboards' > 'DevOps Project'"
echo "   4. S√©lectionner 'DevOps Project - M√©triques Syst√®me'"
echo ""
echo "üîÑ V√©rification des services..."
echo ""

# V√©rifier que les services sont en cours d'ex√©cution
echo "üìä √âtat des services de monitoring:"
docker ps --filter "name=non-optimized" --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
echo ""

# V√©rifier que les conteneurs DevOps sont en cours d'ex√©cution
echo "üìã √âtat des conteneurs DevOps:"
docker ps --filter "name=idurar-" --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
echo ""

# Afficher les m√©triques rapides
echo "üìä M√©triques rapides des conteneurs DevOps:"
echo "=========================================="
echo ""

# Fonction pour afficher les m√©triques d'un conteneur
show_quick_metrics() {
    local container_name=$1
    local cpu_usage=$(docker stats --no-stream --format "table {{.CPUPerc}}" $container_name 2>/dev/null | tail -1 | sed 's/%//')
    local mem_usage=$(docker stats --no-stream --format "table {{.MemUsage}}" $container_name 2>/dev/null | tail -1)
    local status=$(docker ps --filter "name=$container_name" --format "{{.Status}}" 2>/dev/null)
    
    if [ -n "$status" ]; then
        echo "üìä $container_name:"
        echo "   üíª CPU: ${cpu_usage}%"
        echo "   üß† Memory: $mem_usage"
        echo "   üìã Status: $status"
        echo ""
    else
        echo "‚ùå $container_name: Conteneur non trouv√©"
        echo ""
    fi
}

show_quick_metrics "idurar-frontend"
show_quick_metrics "idurar-backend"
show_quick_metrics "idurar-mongodb"
show_quick_metrics "idurar-portainer"

echo "üåê Ouverture de Grafana dans le navigateur..."
sleep 2
open http://localhost:3000 2>/dev/null || xdg-open http://localhost:3000 2>/dev/null || echo "Veuillez ouvrir http://localhost:3000 dans votre navigateur"
echo ""
echo "‚úÖ Configuration termin√©e !"
echo "   - Grafana est accessible sur http://localhost:3000"
echo "   - Utilisez le dashboard 'DevOps Project - M√©triques Syst√®me'"
echo "   - Les m√©triques se mettent √† jour automatiquement"
