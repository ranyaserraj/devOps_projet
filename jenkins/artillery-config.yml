# Artillery load testing configuration for IDURAR ERP CRM
config:
  target: 'http://localhost:5000'
  phases:
    - duration: 300  # 5 minutes
      arrivalRate: 50  # Heavy load: 50 requests per second
    - duration: 600  # 10 minutes
      arrivalRate: 100  # Very heavy load: 100 requests per second
    - duration: 300  # 5 minutes
      arrivalRate: 200  # Extreme load: 200 requests per second
  defaults:
    headers:
      Content-Type: 'application/json'
      Authorization: 'Bearer {{ authToken }}'
  variables:
    authToken: 'your-jwt-token-here'

scenarios:
  - name: "Heavy API Load Test"
    weight: 100
    flow:
      - function: "generateTestData"
      - post:
          url: "/api/auth/login"
          json:
            email: "admin@admin.com"
            password: "admin123"
          capture:
            - json: "$.token"
              as: "authToken"
      - loop:
          - get:
              url: "/api/customers"
          - get:
              url: "/api/invoices"
          - post:
              url: "/api/customers"
              json:
                name: "Load Test Customer {{ $randomString() }}"
                email: "loadtest-{{ $randomString() }}@example.com"
                phone: "+1234567890"
                company: "Load Test Company"
          - post:
              url: "/api/invoices"
              json:
                invoiceNumber: "LOAD-{{ $randomString() }}"
                customer: "507f1f77bcf86cd799439011"
                items:
                  - description: "Load Test Item"
                    quantity: 1
                    price: 100
                    tax: 20
                subtotal: 100
                tax: 20
                total: 120
                status: "draft"
        count: 10  # Heavy test: 10 iterations per user

  - name: "Heavy Database Stress Test"
    weight: 50
    flow:
      - function: "generateTestData"
      - post:
          url: "/api/auth/login"
          json:
            email: "admin@admin.com"
            password: "admin123"
          capture:
            - json: "$.token"
              as: "authToken"
      - loop:
          - post:
              url: "/api/customers"
              json:
                name: "Stress Test Customer {{ $randomString() }}"
                email: "stress-{{ $randomString() }}@example.com"
                phone: "+1234567890"
                company: "Stress Test Company"
                address:
                  street: "Stress Test Street"
                  city: "Stress Test City"
                  country: "Stress Test Country"
                  zipCode: "12345"
                notes: "Heavy stress test customer created during baseline testing"
          - post:
              url: "/api/invoices"
              json:
                invoiceNumber: "STRESS-{{ $randomString() }}"
                customer: "507f1f77bcf86cd799439011"
                items:
                  - description: "Stress Test Item 1"
                    quantity: 5
                    price: 50
                    tax: 20
                  - description: "Stress Test Item 2"
                    quantity: 3
                    price: 75
                    tax: 20
                  - description: "Stress Test Item 3"
                    quantity: 2
                    price: 100
                    tax: 20
                subtotal: 625
                tax: 125
                total: 750
                status: "draft"
                notes: "Heavy stress test invoice created during baseline testing"
        count: 20  # Very heavy test: 20 iterations per user

  - name: "Heavy Search and Query Test"
    weight: 30
    flow:
      - function: "generateTestData"
      - post:
          url: "/api/auth/login"
          json:
            email: "admin@admin.com"
            password: "admin123"
          capture:
            - json: "$.token"
              as: "authToken"
      - loop:
          - get:
              url: "/api/customers"
              qs:
                search: "{{ $randomString() }}"
                page: "{{ $randomInt(1, 10) }}"
                limit: "50"
          - get:
              url: "/api/invoices"
              qs:
                search: "{{ $randomString() }}"
                page: "{{ $randomInt(1, 10) }}"
                limit: "50"
                status: "draft"
          - get:
              url: "/api/customers"
              qs:
                search: "test"
                page: "1"
                limit: "100"
          - get:
              url: "/api/invoices"
              qs:
                search: "invoice"
                page: "1"
                limit: "100"
                status: "paid"
        count: 15  # Heavy search test: 15 iterations per user

# Custom functions for test data generation
functions:
  generateTestData: |
    function generateTestData(context, events, done) {
      context.vars.randomString = function() {
        return Math.random().toString(36).substring(2, 15);
      };
      context.vars.randomInt = function(min, max) {
        return Math.floor(Math.random() * (max - min + 1)) + min;
      };
      return done();
    }
