# IDURAR ERP CRM - Monitoring CI/CD Baseline
# Script PowerShell pour d√©marrer le monitoring

Write-Host "üöÄ D√©marrage du monitoring CI/CD baseline..." -ForegroundColor Green

# V√©rifier Docker
if (-not (Get-Command docker -ErrorAction SilentlyContinue)) {
    Write-Host "‚ùå Docker n'est pas install√© ou d√©marr√©" -ForegroundColor Red
    exit 1
}

# V√©rifier Docker Compose
if (-not (Get-Command docker-compose -ErrorAction SilentlyContinue)) {
    Write-Host "‚ùå Docker Compose n'est pas install√©" -ForegroundColor Red
    exit 1
}

# Aller dans le r√©pertoire monitoring
Set-Location -Path "monitoring"

Write-Host "üì¶ Installation des d√©pendances Node.js..." -ForegroundColor Yellow
Set-Location -Path "scripts"
npm install
Set-Location -Path ".."

Write-Host "üê≥ D√©marrage des conteneurs de monitoring..." -ForegroundColor Yellow
docker-compose up -d

Write-Host "‚è≥ Attente du d√©marrage des services..." -ForegroundColor Yellow
Start-Sleep -Seconds 30

Write-Host "üîç V√©rification des services..." -ForegroundColor Yellow

# V√©rifier Prometheus
try {
    $prometheusResponse = Invoke-WebRequest -Uri "http://localhost:9090/api/v1/query?query=up" -TimeoutSec 10
    if ($prometheusResponse.StatusCode -eq 200) {
        Write-Host "‚úÖ Prometheus est op√©rationnel" -ForegroundColor Green
    }
} catch {
    Write-Host "‚ö†Ô∏è Prometheus n'est pas encore pr√™t" -ForegroundColor Yellow
}

# V√©rifier Grafana
try {
    $grafanaResponse = Invoke-WebRequest -Uri "http://localhost:3001/api/health" -TimeoutSec 10
    if ($grafanaResponse.StatusCode -eq 200) {
        Write-Host "‚úÖ Grafana est op√©rationnel" -ForegroundColor Green
    }
} catch {
    Write-Host "‚ö†Ô∏è Grafana n'est pas encore pr√™t" -ForegroundColor Yellow
}

# V√©rifier Jenkins
try {
    $jenkinsResponse = Invoke-WebRequest -Uri "http://localhost:8081" -TimeoutSec 10
    if ($jenkinsResponse.StatusCode -eq 200) {
        Write-Host "‚úÖ Jenkins est op√©rationnel" -ForegroundColor Green
    }
} catch {
    Write-Host "‚ö†Ô∏è Jenkins n'est pas encore pr√™t" -ForegroundColor Yellow
}

Write-Host ""
Write-Host "üéâ Monitoring CI/CD baseline d√©marr√© avec succ√®s !" -ForegroundColor Green
Write-Host ""
Write-Host "üìä Services disponibles :" -ForegroundColor Cyan
Write-Host "  ‚Ä¢ Grafana:     http://localhost:3001 (admin/admin123)" -ForegroundColor White
Write-Host "  ‚Ä¢ Prometheus:  http://localhost:9090" -ForegroundColor White
Write-Host "  ‚Ä¢ Jenkins:     http://localhost:8081" -ForegroundColor White
Write-Host "  ‚Ä¢ Alertmanager: http://localhost:9093" -ForegroundColor White
Write-Host ""
Write-Host "üìà Dashboards disponibles :" -ForegroundColor Cyan
Write-Host "  ‚Ä¢ CI/CD Overview" -ForegroundColor White
Write-Host "  ‚Ä¢ Performance Baseline" -ForegroundColor White
Write-Host "  ‚Ä¢ Jenkins Detailed" -ForegroundColor White
Write-Host ""
Write-Host "üîß Pour arr√™ter le monitoring :" -ForegroundColor Yellow
Write-Host "  docker-compose down" -ForegroundColor White
Write-Host ""
Write-Host "üìö Documentation compl√®te : monitoring/README.md" -ForegroundColor Cyan

# D√©marrer l'exporteur de m√©triques Jenkins
Write-Host "üöÄ D√©marrage de l'exporteur de m√©triques Jenkins..." -ForegroundColor Yellow
Set-Location -Path "scripts"
Start-Process -FilePath "node" -ArgumentList "jenkins-metrics-exporter.js" -WindowStyle Hidden
Set-Location -Path ".."

Write-Host "‚úÖ Exporteur de m√©triques Jenkins d√©marr√©" -ForegroundColor Green

