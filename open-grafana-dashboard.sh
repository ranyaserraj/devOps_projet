#!/bin/bash

echo "üöÄ Ouverture du Dashboard Grafana - DevOps Project"
echo "================================================="
echo ""

# V√©rifier que Grafana est accessible
echo "üîç V√©rification de Grafana..."
if curl -s http://localhost:3000/api/health > /dev/null; then
    echo "‚úÖ Grafana est accessible"
else
    echo "‚ùå Grafana n'est pas accessible. D√©marrage en cours..."
    docker restart grafana-non-optimized
    sleep 10
fi

echo ""

# V√©rifier que les m√©triques sont disponibles
echo "üìä V√©rification des m√©triques..."
cpu_metrics=$(curl -s "http://localhost:9090/api/v1/query?query=node_cpu_seconds_total" | jq '.data.result | length' 2>/dev/null)
mem_metrics=$(curl -s "http://localhost:9090/api/v1/query?query=node_memory_MemTotal_bytes" | jq '.data.result | length' 2>/dev/null)

if [ "$cpu_metrics" -gt 0 ] && [ "$mem_metrics" -gt 0 ]; then
    echo "‚úÖ M√©triques syst√®me disponibles"
    echo "   - CPU: $cpu_metrics m√©triques"
    echo "   - M√©moire: $mem_metrics m√©triques"
else
    echo "‚ùå M√©triques syst√®me non disponibles"
    echo "   Red√©marrage de Node Exporter..."
    docker restart node-exporter-non-optimized
    sleep 5
fi

echo ""

# Afficher les informations d'acc√®s
echo "üåê Acc√®s au Dashboard:"
echo "======================"
echo "üìä URL: http://localhost:3000"
echo "üë§ Username: admin"
echo "üîë Password: admin123"
echo ""
echo "üéØ Dashboard recommand√©:"
echo "   'DevOps Project - M√©triques Syst√®me'"
echo ""
echo "üìã Navigation:"
echo "   1. Se connecter avec admin/admin123"
echo "   2. Aller dans 'Dashboards'"
echo "   3. S√©lectionner 'DevOps Project - M√©triques Syst√®me'"
echo ""

# Afficher les m√©triques actuelles
echo "üìä M√©triques actuelles:"
echo "======================"

# CPU
cpu_usage=$(curl -s "http://localhost:9090/api/v1/query?query=100 - (avg by (instance) (irate(node_cpu_seconds_total{mode=\"idle\"}[5m])) * 100)" | jq -r '.data.result[0].value[1]' 2>/dev/null)
if [ "$cpu_usage" != "null" ] && [ -n "$cpu_usage" ]; then
    echo "üíª CPU: ${cpu_usage}%"
else
    echo "üíª CPU: Calcul en cours..."
fi

# M√©moire
mem_total=$(curl -s "http://localhost:9090/api/v1/query?query=node_memory_MemTotal_bytes" | jq -r '.data.result[0].value[1]' 2>/dev/null)
mem_available=$(curl -s "http://localhost:9090/api/v1/query?query=node_memory_MemAvailable_bytes" | jq -r '.data.result[0].value[1]' 2>/dev/null)

if [ "$mem_total" != "null" ] && [ "$mem_available" != "null" ]; then
    mem_total_gb=$(echo "scale=2; $mem_total / 1024 / 1024 / 1024" | bc 2>/dev/null)
    mem_available_gb=$(echo "scale=2; $mem_available / 1024 / 1024 / 1024" | bc 2>/dev/null)
    mem_used_gb=$(echo "scale=2; $mem_total_gb - $mem_available_gb" | bc 2>/dev/null)
    echo "üß† M√©moire: ${mem_used_gb}GB / ${mem_total_gb}GB"
else
    echo "üß† M√©moire: Calcul en cours..."
fi

echo ""

# Ouvrir Grafana dans le navigateur
echo "üåê Ouverture de Grafana dans le navigateur..."
echo "   URL: http://localhost:3000"
echo ""

# Attendre un peu pour que les m√©triques se stabilisent
echo "‚è≥ Attente de la stabilisation des m√©triques..."
sleep 3

# Ouvrir le navigateur
open http://localhost:3000 2>/dev/null || xdg-open http://localhost:3000 2>/dev/null || echo "Veuillez ouvrir http://localhost:3000 dans votre navigateur"

echo ""
echo "‚úÖ Dashboard Grafana ouvert !"
echo "   - Les m√©triques se mettent √† jour automatiquement"
echo "   - Rafra√Æchissement toutes les 5 secondes"
echo "   - Dashboard: 'DevOps Project - M√©triques Syst√®me'"
