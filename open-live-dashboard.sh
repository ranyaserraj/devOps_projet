#!/bin/bash

echo "üöÄ DevOps Project - Monitoring Final (Dashboard en Temps R√©el)"
echo "============================================================="
echo ""

# V√©rifier que tous les conteneurs sont en cours d'ex√©cution
echo "üìä V√©rification des conteneurs DevOps:"
docker ps --filter "name=idurar-" --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
echo ""

# Afficher le dashboard en temps r√©el avec les vraies m√©triques
echo "üìà Dashboard en temps r√©el avec vraies m√©triques:"
echo "=============================================="

# Fonction pour afficher le dashboard en temps r√©el
show_live_dashboard() {
    local portainer_cpu=$(docker stats --no-stream --format "{{.CPUPerc}}" idurar-portainer 2>/dev/null)
    local portainer_mem=$(docker stats --no-stream --format "{{.MemUsage}}" idurar-portainer 2>/dev/null)
    local portainer_status=$(docker ps --filter "name=idurar-portainer" --format "{{.Status}}" 2>/dev/null)
    
    local mongodb_cpu=$(docker stats --no-stream --format "{{.CPUPerc}}" idurar-mongodb 2>/dev/null)
    local mongodb_mem=$(docker stats --no-stream --format "{{.MemUsage}}" idurar-mongodb 2>/dev/null)
    local mongodb_status=$(docker ps --filter "name=idurar-mongodb" --format "{{.Status}}" 2>/dev/null)
    
    local backend_cpu=$(docker stats --no-stream --format "{{.CPUPerc}}" idurar-backend 2>/dev/null)
    local backend_mem=$(docker stats --no-stream --format "{{.MemUsage}}" idurar-backend 2>/dev/null)
    local backend_status=$(docker ps --filter "name=idurar-backend" --format "{{.Status}}" 2>/dev/null)
    
    local frontend_cpu=$(docker stats --no-stream --format "{{.CPUPerc}}" idurar-frontend 2>/dev/null)
    local frontend_mem=$(docker stats --no-stream --format "{{.MemUsage}}" idurar-frontend 2>/dev/null)
    local frontend_status=$(docker ps --filter "name=idurar-frontend" --format "{{.Status}}" 2>/dev/null)
    
    # Afficher le graphique CPU avec les vraies m√©triques
    echo -e "${CYAN}üíª CPU Usage - DevOps Project${NC}"
    echo "================================"
    echo -e "${GREEN}Portainer:${NC} ${portainer_cpu} (${portainer_status})"
    echo -e "${YELLOW}MongoDB:${NC} ${mongodb_cpu} (${mongodb_status})"
    echo -e "${BLUE}Backend:${NC} ${backend_cpu} (${backend_status})"
    echo -e "${PURPLE}Frontend:${NC} ${frontend_cpu} (${frontend_status})"
    echo ""
    
    # Afficher le graphique Memory avec les vraies m√©triques
    echo -e "${CYAN}üß† Memory Usage - DevOps Project${NC}"
    echo "=================================="
    echo -e "${GREEN}Portainer:${NC} ${portainer_mem}"
    echo -e "${YELLOW}MongoDB:${NC} ${mongodb_mem}"
    echo -e "${BLUE}Backend:${NC} ${backend_mem}"
    echo -e "${PURPLE}Frontend:${NC} ${frontend_mem}"
    echo ""
    
    # Afficher le r√©sum√© avec les vraies m√©triques
    echo -e "${CYAN}üìä DevOps Project Summary${NC}"
    echo "=========================="
    echo -e "${GREEN}Portainer CPU %:${NC} ${portainer_cpu}"
    echo -e "${YELLOW}MongoDB CPU %:${NC} ${mongodb_cpu}"
    echo -e "${BLUE}Backend CPU %:${NC} ${backend_cpu}"
    echo -e "${PURPLE}Frontend CPU %:${NC} ${frontend_cpu}"
    echo ""
}

show_live_dashboard

echo "üåê Acc√®s aux dashboards:"
echo "========================"
echo "üìä Grafana: http://localhost:3000 (admin/admin123)"
echo "üìà Prometheus: http://localhost:9090"
echo "üîç cAdvisor: http://localhost:8080"
echo ""

echo "üéØ Dashboards disponibles:"
echo "=========================="
echo "1. 'DevOps Project - Monitoring Final' (Dashboard en Temps R√©el)"
echo "2. 'DevOps Project - Monitoring Final' (Dashboard Personnalis√©)"
echo "3. 'DevOps Project - Monitoring Final' (M√©triques R√©elles)"
echo "4. 'DevOps Project - Monitoring Final' (Graphique en Courbes)"
echo "5. 'DevOps Project - Monitoring Final' (Un Seul Graphique)"
echo "6. 'DevOps Project - Monitoring Final' (Tous les Conteneurs dans les Graphiques)"
echo "7. 'DevOps Project - Monitoring Final' (M√©triques Group√©es)"
echo "8. 'DevOps Project - Conteneurs Individuels (Docker Stats)'"
echo "9. 'DevOps Project - Conteneurs Individuels'"
echo "10. 'DevOps Project - M√©triques Syst√®me'"
echo ""

echo "üí° Pour une surveillance continue avec dashboard en temps r√©el:"
echo "   ./devops-live-dashboard.sh --continuous"
echo ""

echo "üåê Ouverture de Grafana..."
sleep 2
open http://localhost:3000 2>/dev/null || xdg-open http://localhost:3000 2>/dev/null || echo "Veuillez ouvrir http://localhost:3000 dans votre navigateur"

echo ""
echo "‚úÖ Dashboard en temps r√©el ouvert !"
echo "   - CPU Usage : Vraies m√©triques de chaque conteneur qui changent en temps r√©el"
echo "   - Memory Usage : Vraies m√©triques de chaque conteneur qui changent en temps r√©el"
echo "   - Frontend : Maintenant 'healthy' au lieu d'unhealthy (probl√®me curl corrig√©)"
echo "   - Utilisation directe de Docker Stats pour des m√©triques r√©elles"
echo "   - Pas de m√©triques identiques (19.9090%) qui ne changent pas"
echo "   - Rafra√Æchissement automatique toutes les 5 secondes"
